name: Deploy VM

on:
  workflow_dispatch:
    inputs:
      vm_type:
        description: 'Choose VM type'
        required: true
        default: 'ec2'
        type: choice
        options:
          - ec2
          - azure_vm
      enable_monitoring:
        description: 'Enable monitoring setup'
        required: false
        default: 'false'
        type: boolean

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Terraform
        uses: hashicorp/setup-terraform@v2

      - name: Select module
        run: |
          mkdir terraform
          if [[ "${{ github.event.inputs.vm_type }}" == "ec2" ]]; then
            cp -r terraform-root/modules/ec2/* terraform/
          elif [[ "${{ github.event.inputs.vm_type }}" == "azure_vm" ]]; then
            cp -r modules/azure_vm/* terraform/
          fi

      - name: Terraform Init
        working-directory: terraform
        run: terraform init

      - name: Terraform Apply
        working-directory: terraform
        run: terraform apply -auto-approve
        env:
          ARM_CLIENT_ID: ${{ secrets.ARM_CLIENT_ID }}
          ARM_CLIENT_SECRET: ${{ secrets.ARM_CLIENT_SECRET }}
          ARM_SUBSCRIPTION_ID: ${{ secrets.ARM_SUBSCRIPTION_ID }}
          ARM_TENANT_ID: ${{ secrets.ARM_TENANT_ID }}
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}

      - name: Setup Monitoring
        if: ${{ github.event.inputs.enable_monitoring == 'true' }}
        run: |
          echo "üõ†Ô∏è Setting up Prometheus Node Exporter on ${{ github.event.inputs.vm_type }} VM"

          # Define Node Exporter version
          NODE_EXPORTER_VERSION="1.5.0"

          if [[ "${{ github.event.inputs.vm_type }}" == "ec2" ]]; then
            echo "Installing Prometheus Node Exporter on EC2..."

            EC2_IP="${{ secrets.EC2_INSTANCE_IP }}"
            SSH_KEY="${{ secrets.EC2_SSH_KEY }}"

            ssh -o StrictHostKeyChecking=no -i $SSH_KEY ec2-user@$EC2_IP << EOF
              sudo useradd --no-create-home --shell /bin/false node_exporter || true
              wget https://github.com/prometheus/node_exporter/releases/download/v$NODE_EXPORTER_VERSION/node_exporter-$NODE_EXPORTER_VERSION.linux-amd64.tar.gz
              tar xvfz node_exporter-$NODE_EXPORTER_VERSION.linux-amd64.tar.gz
              sudo cp node_exporter-$NODE_EXPORTER_VERSION.linux-amd64/node_exporter /usr/local/bin/
              sudo chown node_exporter:node_exporter /usr/local/bin/node_exporter

              echo '[Unit]
              Description=Prometheus Node Exporter
              Wants=network-online.target
              After=network-online.target

              [Service]
              User=node_exporter
              Group=node_exporter
              Type=simple
              ExecStart=/usr/local/bin/node_exporter

              [Install]
              WantedBy=default.target' | sudo tee /etc/systemd/system/node_exporter.service

              sudo systemctl daemon-reload
              sudo systemctl enable node_exporter
              sudo systemctl start node_exporter
              sudo systemctl status node_exporter
EOF

          elif [[ "${{ github.event.inputs.vm_type }}" == "azure_vm" ]]; then
            echo "Installing Prometheus Node Exporter on Azure VM..."

            AZURE_VM_IP="${{ secrets.AZURE_VM_IP }}"
            SSH_KEY="${{ secrets.AZURE_SSH_KEY }}"

            ssh -o StrictHostKeyChecking=no -i $SSH_KEY azureuser@$AZURE_VM_IP << EOF
              sudo useradd --no-create-home --shell /bin/false node_exporter || true
              wget https://github.com/prometheus/node_exporter/releases/download/v$NODE_EXPORTER_VERSION/node_exporter-$NODE_EXPORTER_VERSION.linux-amd64.tar.gz
              tar xvfz node_exporter-$NODE_EXPORTER_VERSION.linux-amd64.tar.gz
              sudo cp node_exporter-$NODE_EXPORTER_VERSION.linux-amd64/node_exporter /usr/local/bin/
              sudo chown node_exporter:node_exporter /usr/local/bin/node_exporter

              echo '[Unit]
              Description=Prometheus Node Exporter
              Wants=network-online.target
              After=network-online.target

              [Service]
              User=node_exporter
              Group=node_exporter
              Type=simple
              ExecStart=/usr/local/bin/node_exporter

              [Install]
              WantedBy=multi-user.target' | sudo tee /etc/systemd/system/node_exporter.service

              sudo systemctl daemon-reload
              sudo systemctl enable node_exporter
              sudo systemctl start node_exporter
              sudo systemctl status node_exporter
EOF

          else
            echo "Unsupported VM type for monitoring setup"
            exit 1
          fi
